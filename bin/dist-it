# This displays the usage and exists the script
display_usage () {
    echo "dist-it <input-file> <output-name> [options]"
    echo "options:"
    echo ""
    echo "  --no-babelify: Turn off the ES6 -> ES5 transipling step."
    echo "  --no-uglify: Turn off the uglify step."
    echo "  --no-commit: Disable auto-commit."
    exit 0
}

if [ "$1" = "--help" ]
  then
    display_usage
  fi

pushd . > /dev/null
SCRIPT_PATH="${BASH_SOURCE[0]}";
if ([ -h "${SCRIPT_PATH}" ]) then
  while([ -h "${SCRIPT_PATH}" ]) do cd `dirname "$SCRIPT_PATH"`; SCRIPT_PATH=`readlink "${SCRIPT_PATH}"`; done
fi
cd `dirname ${SCRIPT_PATH}` > /dev/null
SCRIPT_PATH=`pwd`;
popd  > /dev/null

TOOL_DIR=$SCRIPT_PATH/../


# dist-it lib/index.js fileName
if [ -z "$1" ]
  then
    echo "Please provide the input file."
    display_usage
  fi

# Check for filename
if [ -z "$2" ]
  then
    echo "Please provide the output file name."
    display_usage
  fi

# Get the input file
input_file=$1

# Get the exported function name
name=`$TOOL_DIR/node_modules/.bin/namy -p $input_file`

# Check if the name is there
if [ -z "$name" ]
  then
    echo "Cannot find the library name. Make sure the input file exports a function."
    display_usage
  fi

echo "The export name is: $name"

# Create the dist older
dist_folder=dist
mkdir -p $dist_folder

output_file_name=$2
output_file_path=$dist_folder/$output_file_name

# Create the output
echo "Browserifying..."
$TOOL_DIR/node_modules/.bin/browserify $input_file -s $name -o $output_file_path

if [[ $* == *--no-babelify* ]]
  then
    echo "Not babelifying."
  else
    echo "Babelifying..."
    $TOOL_DIR/node_modules/.bin/babel $output_file_path -o $output_file_path --no-babelrc --presets=$TOOL_DIR/node_modules/babel-preset-es2015
  fi

if [[ $* == *--no-uglify* ]]
  then
    echo "Not uglifying."
  else
    echo "Uglifying..."
    $TOOL_DIR/node_modules/.bin/uglifyjs $output_file_path -cm -o $dist_folder/$2
  fi

if [[ $* == *--no-commit* ]]
  then
    echo "Not committing."
  else
    echo "Committing..."
    # Commit the changes
    git add $dist_folder 2>/dev/null
    git commit -m 'Rebuild' 2>/dev/null
  fi

echo "Done"
