#!/bin/sh

# This displays the usage and exists the script
display_usage () {
    echo "dist-it <input-file> <output-name>"
    exit 0
}

exit_missing_dep () {
    echo "Cannot find $1. Please run 'npm install -g $1' to get it."
    exit 1;
}

warning_missing () {
    echo "$1 is missing. The bundling may fail if you used ES2015 features in your scripts."
}

check_exist () {
    if ! which $1 > /dev/null; then
        $2 $1
    else
        if [ -n "$3" ]; then
            $3 $1
        fi
    fi
}


if [ "$1" = "--help" ]
  then
    display_usage
  fi

# Check for namy.
check_exist namy exit_missing_dep
check_exist uglifyjs exit_missing_dep
check_exist browserify exit_missing_dep

# dist-it lib/index.js fileName
if [ -z "$1" ]
  then
    echo "Please provide the input file."
    display_usage
  fi

# Check for filename
if [ -z "$2" ]
  then
    echo "Please provide the output file name."
    display_usage
  fi

# Get the input file
input_file=$1

# Get the exported function name
name=`namy -p $input_file`

# Check if the name is there
if [ -z "$name" ]
  then
    echo "Cannot find the library name. Make sure the input file exports a function."
    display_usage
  fi

# Create the dist older
dist_folder=dist
mkdir -p $dist_folder

output_file_name=$2
output_file_path=$dist_folder/$output_file_name

# Create the output
browserify $input_file -s $name -o $output_file_path

babelify () {
    babel $output_file_path -o $output_file_path
}

check_exist babel warning_missing babelify

uglifyjs $output_file_path -cm -o $dist_folder/$2

# Commit the changes
git add $dist_folder 2>/dev/null
git commit -m 'Rebuild' 2>/dev/null
echo "Done"
